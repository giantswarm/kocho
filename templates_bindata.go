// Code generated by go-bindata.
// sources:
// default-templates/primary-cloudconfig.tmpl
// default-templates/primary-cloudformation.tmpl
// default-templates/primary-parameters.tmpl
// default-templates/secondary-cloudconfig.tmpl
// default-templates/secondary-cloudformation.tmpl
// default-templates/secondary-parameters.tmpl
// default-templates/standalone-cloudconfig.tmpl
// default-templates/standalone-cloudformation.tmpl
// default-templates/standalone-parameters.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _defaultTemplatesPrimaryCloudconfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xdd\x6e\xd4\x3c\x10\xbd\x6e\x9f\xc2\xea\xf7\xdd\x81\x93\x55\x01\x01\x91\x72\x41\xd5\x82\xb8\x02\xd1\x16\x84\xaa\xaa\xf2\xda\x93\x5d\xab\x8e\x27\xb2\x27\xbb\x5d\x2d\xfb\xee\x8c\x9d\xfe\xa4\xa5\xb0\x3f\x37\xf1\xcc\x99\xf1\x9c\x33\xc7\xff\x69\x87\xbd\x91\x1a\x7d\x63\x67\xfb\x1a\x03\x60\xac\xf6\x85\xe8\x3b\xa3\x08\xaa\xbd\x3d\xfe\x16\x22\xc0\x14\x91\x64\xa4\xc0\xc1\xd9\xaa\x12\xd8\x34\x9c\x00\xd2\xe6\xb0\xca\x08\x63\xa3\xc6\x05\x04\xce\xad\xd7\xc5\xf1\xdd\xe9\x3c\xb8\xcd\x26\x03\x94\xe1\x33\xd9\x08\x52\x3b\x0b\x9e\x64\x1f\x5c\xac\xc4\x9c\xa8\xab\xca\xf2\xff\x2e\xd8\x05\xf7\xbe\xb2\xdd\xe2\x75\x75\xf8\xea\xed\xfb\x5c\x64\xbd\x25\xab\x9c\x7c\x28\xee\x00\xc2\xbf\x4b\xdf\x4d\x72\xa9\xb3\x91\xc0\x3f\x7b\xd9\xa4\xc8\xff\x87\x6b\x6e\xb1\x3b\xf7\x06\x07\x9a\x2c\x7a\x49\xb6\x05\xec\xa9\x12\x6f\x26\x93\x94\x6a\x1c\x00\x0d\x82\x24\x6d\xae\x22\x04\x1e\x7c\x2b\xcd\x16\x48\xb1\xdc\xaa\x12\x07\x01\x1d\x2b\xc4\x6b\xa8\x29\xf4\xf0\x92\xb5\x3c\x53\xb3\xb8\xd9\x1c\xa4\x9d\xb0\x1a\x71\xe8\x2e\x85\x57\x2d\x54\xc3\x06\x8a\x74\x8d\xd5\x90\x33\x42\x68\x6c\x5b\xe5\x4d\x25\x22\xa9\x40\x8f\xe0\x79\xbe\xed\x70\xc1\x3b\xb4\x8d\x28\x7e\xa2\x9e\xf7\xdf\x99\x00\x73\xbd\x5d\xe3\x5d\xa7\x55\x4a\xed\xd2\x09\xbc\x9a\x3a\x2e\x48\x74\xee\x71\x9e\xe5\x66\xd5\x7e\x89\xd1\x6f\xff\xe1\xf3\xe2\x9c\x99\x5e\x8e\x02\xc7\x10\x75\xb0\x5d\xd2\xbc\xfe\x64\x95\x27\x71\xba\x54\xa1\x15\x79\xc0\x11\xee\x07\xa7\x62\xed\x81\x96\x18\xae\x25\x7a\x67\x3d\x14\x3c\xcc\x0c\x68\x84\xfa\xd0\x10\x84\xad\xa8\x23\x68\xd2\x1a\xda\xde\x91\x95\x3d\x33\xfd\x13\x72\x71\x3a\xf0\x1f\x8f\x7a\xb6\xea\xa0\x46\x0f\x71\x8e\x63\xe8\xc9\x0d\xe8\xd3\x24\xcb\x57\xee\x59\xf6\x31\x94\x53\xeb\xcb\xf6\xda\xd8\x20\x64\x27\xca\x39\xb6\x50\xa6\xbd\xa7\xf8\xd6\xba\x25\xcf\x21\xa4\xf4\x28\xd9\x5e\x53\x8c\x90\x0d\x16\xd9\x61\x06\x97\xde\xa1\x32\xb1\x98\x25\x9d\x62\x92\xa9\xb0\x58\xe6\x7d\x95\x6c\xa7\xc7\x3b\x1d\xe2\x42\x7e\x79\x32\xc1\x10\xdf\x3a\x87\x9e\xb7\x68\xc4\x8b\x9b\x9d\xab\xeb\xe7\x80\x22\x02\xf5\x9d\x90\x0b\x21\x0d\xb3\xca\xee\x91\x46\x41\x8b\x3e\xe6\x67\xc0\xc1\xec\xdc\xc4\x36\xcd\x5d\x33\x8f\x8f\x29\x70\xcf\x83\x11\xe9\x29\x8c\x01\x27\x7c\x1e\xe7\x0d\xea\x6b\x7e\xdf\x23\xc4\x71\x8e\x3c\xf6\xf7\xf0\xfb\x06\xad\xb2\x3e\xfb\xe4\xe4\xc6\x52\xbd\x82\x38\x5e\xfb\x67\xcf\x33\x3a\x77\xf9\xc4\x79\x60\x8e\x56\x7f\xf5\xcb\x7a\x0d\xde\xf0\x25\xbf\x03\x00\x00\xff\xff\xb7\xb2\xca\x79\x71\x05\x00\x00")

func defaultTemplatesPrimaryCloudconfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesPrimaryCloudconfigTmpl,
		"default-templates/primary-cloudconfig.tmpl",
	)
}

func defaultTemplatesPrimaryCloudconfigTmpl() (*asset, error) {
	bytes, err := defaultTemplatesPrimaryCloudconfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/primary-cloudconfig.tmpl", size: 1393, mode: os.FileMode(420), modTime: time.Unix(1455099732, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesPrimaryCloudformationTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\x5f\x6f\x1a\xb9\x16\x7f\xcf\xa7\xb0\x46\x7d\x48\xa4\x84\x50\xe8\xbd\xb7\x45\xba\x0f\x29\xd0\x86\xdd\xa4\x45\x85\xb2\x52\xab\x3c\x18\x8f\x03\x56\x67\xc6\xc8\xe3\xa1\xc9\x22\xbe\xfb\x1e\x7b\x66\x60\x6c\x8f\x9d\xb6\xab\xaa\xaa\x76\xa5\xac\x38\xff\x7e\xe7\xaf\xcf\x9c\xdd\x9d\x20\x14\x5d\xfd\x35\x9b\xd3\x74\x93\x60\x49\xdf\x70\x91\x62\xb9\xa0\x22\x67\x3c\x8b\x06\x28\xea\x75\x9f\x77\x2f\xba\xaf\xe0\xdf\xe8\x1c\x78\x81\x7b\x44\x73\x22\xd8\x46\x56\x0c\x6f\x19\xce\x24\x9a\x7d\xc5\x22\x45\x3c\x43\xe3\x61\xaf\x66\x9c\x62\x81\x53\x2a\x41\x17\xf0\xed\xf4\x6f\xca\x58\xca\x26\x71\xe3\x07\xf8\x69\xfe\xb8\xa1\x4a\xd5\x4c\x0a\x96\xad\x2a\xf1\x36\x5b\x5a\x16\xf1\x7b\x84\xd1\x90\x0b\xfa\x7e\x86\x58\x8a\x57\x14\xdd\x73\x81\xe4\x9a\xa2\x7c\x43\x09\xbb\x67\x34\x46\x2c\xcb\x25\xce\x08\x45\x12\x74\x23\x9c\xc5\x48\xd0\x95\xd2\x52\xe9\xde\xd7\x46\xa2\xc5\x86\xfc\x30\x1e\x2d\xab\xf0\x3c\xf2\x42\x20\xfa\xc0\x72\x09\x02\x68\xc1\x84\x2c\x70\x82\xa6\x82\x6d\x21\xa6\x68\x98\xf0\x22\x46\xa7\x8b\xe9\xf0\xcc\xb5\x3f\x4e\x96\xb3\x62\x99\x51\xd9\x8e\x61\xc8\xd3\x14\x8f\x68\xc2\x52\x26\x69\x7c\x03\x16\x02\x78\xe6\x10\x83\x52\xd9\x44\x85\xa0\x84\x15\x40\x73\x08\xdc\xf8\xe6\xb5\x8b\xec\x16\x93\x35\xcb\x68\x08\xdd\x93\x11\xfa\x61\x44\x69\x69\x3c\x77\x61\x0d\x93\x22\x87\xa2\x9a\xb1\xbf\xa9\x09\x6a\x44\xef\x71\x91\x28\xa4\x51\x3f\x00\xe9\x5d\x91\x2e\xa9\x50\x59\xcb\x78\x4c\x73\x85\x8a\x94\x2a\xd1\xe9\xf3\x8b\xfe\x59\xa7\x29\x7b\x8b\x1f\x16\x38\x29\xa8\xa3\xf4\x96\x65\xed\x84\x3a\x34\xa5\x19\x17\xfe\xd5\xa7\x7f\x11\xca\xab\x2d\x66\x09\x5e\xb2\x84\xc9\xc7\x4f\x3c\x2b\x2b\xff\xa9\x98\xb6\x60\x48\x12\xfe\x75\x36\xbb\x7e\x23\x78\xea\x8d\x61\xb7\xa3\xff\xb9\xec\x3e\x81\x09\x72\x8b\x96\x09\x27\x5f\xd0\xe9\x70\x32\xfa\x70\x06\xe9\xc3\x30\x10\x66\xd7\x88\xe5\x08\x97\x80\x13\x68\x44\xde\x69\x0b\x53\xe5\xb6\x03\x71\x52\x35\x70\xc5\x77\x84\x58\xc3\xa7\xb1\x8e\xbf\x9a\x2d\x9f\x1b\x44\xcd\x20\x7b\x9d\x0c\x67\xbc\x61\xef\x48\x48\x19\x11\xed\x94\x3c\xc5\x49\xd2\x2e\x43\x63\x56\xa4\xad\xa4\x04\x8b\x15\x75\x29\xe9\x8b\x00\xe5\xc1\x4f\xea\x05\x68\x2f\x02\xb4\xe7\x5d\x2f\xb1\xef\x85\x0f\x24\xbf\x50\x40\x9f\x17\x24\xf1\x7a\x4d\xfc\x5e\x93\x80\xd7\x24\xe0\x35\xd0\x5e\x7a\x69\x5e\xcf\x88\xdf\x33\x12\xf2\xac\x1f\x00\xd2\xf7\x03\x59\xf5\xfc\x3a\x81\xe6\x95\x13\x5e\x07\x84\xdf\x01\x11\x70\x40\x04\x1c\x10\x01\x07\x58\xcf\x6b\x8e\x05\x7c\x03\x9a\xd7\x1c\x0b\xf8\x1d\xfb\xcd\xc5\x01\x73\x71\xc0\x5c\x7c\x34\xd7\x20\xdd\x35\x66\xd1\x90\xc3\xb0\x11\x98\x65\xd2\x1a\x6f\xb7\xf0\x2c\xa0\x25\xec\x0f\x68\x8b\x13\x16\xab\xe5\x06\x5d\x2f\x6e\xcd\xed\xa2\x63\xce\xc7\xc3\xfc\x6c\x9b\x1b\xf6\xfc\x54\x0a\xcd\x55\xe5\xf4\x20\x76\x8e\xa8\x24\x67\xdf\x35\x34\xff\xa4\x8f\x53\xcc\x84\x3d\xd2\xdd\x91\x0d\x7b\x99\x5e\xa3\xf4\xbe\x86\x40\x0c\x29\x39\x98\xd1\x08\xab\xd9\xaa\xa7\x37\x26\x84\xe6\xb9\xfa\x4d\xbd\xc7\x35\xca\xef\xc2\xa3\x1f\x21\x88\xee\x3d\x5b\x05\x31\x7d\x80\xdd\x0c\x32\xf0\x08\x0f\x31\x08\x5c\x10\x2d\x81\xca\x3f\x85\xc0\x8a\x0d\x9d\x2e\x71\x4e\xff\xfb\xe2\xec\x1b\xec\x9f\x34\x50\x80\xee\x1c\xde\x47\x42\x8d\x25\xb4\x7a\x25\x61\xed\x99\x51\x52\x08\x78\x4d\xdf\x0a\x5e\x6c\xda\x5f\x66\x58\x8f\x07\x03\x88\xd3\x60\x60\x32\x37\x80\x4c\x05\xdf\x50\x21\x99\x61\x45\x53\x34\xab\xe5\x6e\xfd\x46\x83\x79\xe4\x53\xd9\xdc\x4c\x95\x13\xf7\x87\x7d\x33\x3a\x06\x58\xb3\x19\x1a\x26\xd9\x4a\x40\xd6\xac\x47\x71\x67\xf4\x44\x34\xd9\x00\x5e\xc9\x09\x4f\x74\x9d\x92\x8d\xd5\x34\x91\xda\x0b\xa6\x5c\xe8\x32\x7e\xd9\xb5\xa9\x73\xee\xa7\x0d\x59\x2c\x26\x1b\x73\x7d\x68\x70\xec\xef\xfc\xd0\xc7\x07\xe4\x77\x07\x9e\xbd\x77\x2f\xf8\x15\x79\x1b\x67\x7a\x93\xa9\xb7\x45\x02\xab\x79\x91\x31\xa2\xeb\xf3\x67\xa5\xce\x4e\x5e\x33\xc6\x47\xed\xc6\x42\x67\x1a\x71\x12\xda\xeb\xb9\x33\xf2\xa9\x8a\x30\xb2\x0e\x0a\x9a\x29\x3d\xf7\x16\x9a\x51\x0f\xbb\x1d\xea\xc0\x36\xaa\x56\x44\xb4\xdf\xbb\xfa\x0d\x88\xfd\xff\xbd\x0a\x22\x68\xa5\xbb\x4e\xfc\x74\x98\x4e\x03\x58\x30\xdb\xe8\x61\x98\xcd\x27\x2a\xd8\x06\xba\x58\x74\x20\xbe\xa7\xf8\xeb\x22\xfb\xf6\x1e\x28\xeb\xb8\x2e\xb4\xf6\xf6\x33\xab\x3a\x5c\x4c\xe1\x44\x87\x92\x1c\xcd\xf4\x20\x37\xfd\x89\x2d\xd0\x08\x85\xa1\xb6\xc6\x3a\x10\x5f\xc8\xe0\x6f\x1d\x5f\xab\x02\x43\xd5\xf9\x0b\xe2\x0b\x23\xeb\xb7\x0e\x6f\xcf\x1b\xdc\xde\x2f\x0b\xed\x38\xc1\xb9\x64\xe4\x86\xe3\xf8\x35\x4e\x94\x1a\x51\x2d\x1c\x11\x72\x63\x8d\x0e\xc1\xb6\xc5\x60\xa3\x1a\x0c\x9a\x5a\x3c\x51\x47\x56\xd8\xcb\x73\x4f\x6e\xbc\x4f\xc7\x23\x97\xfd\x02\x92\x35\x4d\x75\xc6\x61\xfb\xa6\x22\xc3\x49\xe4\x7f\x21\x5b\xde\xc6\x83\x05\xdf\x46\x67\x4e\x54\x43\xb7\x3a\xa6\xd1\x4c\x9d\x27\xc1\x85\xcf\x56\x26\x8c\xf0\xa9\xa4\xa2\xf6\x77\xe7\x90\xab\x20\xd3\xa1\xa2\x14\xc3\x7c\x38\xfd\xc6\x97\xc9\x87\xc2\xdd\xbb\x5a\x50\xb8\x4c\x41\x14\x66\x6c\x6a\x7d\x65\x7a\x77\x9d\xea\x16\x08\xc1\xa6\x82\xaa\xdf\xf7\x66\x1e\xaf\x29\x4e\xe4\x7a\xb8\xa6\xe4\x8b\x5d\x10\xaa\xd2\xd4\xd7\x97\xc6\x05\x09\x7b\x93\x0d\x06\x7f\x70\x96\xe9\xa8\xa3\x28\x3a\x47\x9f\xa3\xeb\xf9\x7c\x3a\x80\xff\xaa\x82\x87\xa2\xcb\x6d\x75\x82\xbe\xbb\xb3\xb6\x99\xca\xd4\xe3\x7c\x0d\x93\x60\xcd\x93\x58\x7b\xd3\xb7\x7d\xfd\x98\xad\xdb\xf8\xfe\xe3\x06\x0e\xca\x0e\xbe\xee\x4a\x2d\xee\xae\xcb\x52\xca\x0b\x59\xc9\x06\x3b\x70\xb7\x13\x38\x5b\x51\xf4\x8c\x65\x31\x7d\x40\x83\xff\xa3\x67\x75\xd8\x20\x5a\x76\x9b\xa2\xc3\x7d\x75\xb7\x2b\x25\x60\xdb\xb0\x5b\xc9\xea\x50\x35\x0e\xeb\xc4\x98\x6d\xe2\x6f\x47\xe5\xa2\xba\x91\x5b\xeb\x68\x79\x85\xb7\x37\x45\xe7\xea\xe6\x4c\xa4\x12\x91\x2d\x06\x1f\x90\xef\x70\x6a\x4a\xd4\xdf\xa2\x0e\xb3\x35\x04\xdb\x0e\x78\xae\xdd\x40\x53\x5b\x6d\xad\x72\x9f\x53\x31\xc2\x12\x1b\x78\x9a\xdf\xa2\x0e\xa6\xd7\xea\x7e\x39\xa2\x5b\x46\xe8\x2d\xde\x6c\x60\xf4\xb5\x0d\x05\xfd\xe1\xaa\x78\x2a\x67\xa3\xcb\x98\x6e\x2f\x1f\xb6\x31\x76\xb7\xbc\xf1\xb2\x9a\x80\x0b\x9e\x14\x29\xd5\xd7\x6a\x95\xc9\x97\x36\xf8\xbd\x8d\xde\xbe\xf1\x9a\x79\xfb\xd4\x12\xd0\xea\xbe\x6e\x30\x9a\xc7\x7b\x47\x66\x8e\x57\x3a\xf0\x8e\x83\x90\x36\x7d\xbd\x56\x1e\x3a\x4e\x1d\x2e\xde\x50\xb3\x1d\xc5\xb2\xdf\x5f\x34\xca\xd7\xf2\xab\xa5\x5b\x76\x3b\x9a\xc5\xc7\x66\xd0\x7f\xeb\x0f\xf5\xf7\x85\xdc\x14\xd2\xf8\x4c\xff\xf8\xe1\x26\x78\x37\x18\xbd\x9b\xa9\x33\x86\xfe\x5f\x3f\x12\xc3\xe8\x69\x74\x57\x8d\xb5\x9a\x38\x6f\xa9\xbc\x92\xb2\x9a\x39\x81\x27\xf2\x5c\x6b\xd5\xee\xa3\x3b\x0b\xe8\xc9\xfe\xe4\x9f\x00\x00\x00\xff\xff\x95\x97\x7f\x29\x30\x1b\x00\x00")

func defaultTemplatesPrimaryCloudformationTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesPrimaryCloudformationTmpl,
		"default-templates/primary-cloudformation.tmpl",
	)
}

func defaultTemplatesPrimaryCloudformationTmpl() (*asset, error) {
	bytes, err := defaultTemplatesPrimaryCloudformationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/primary-cloudformation.tmpl", size: 6960, mode: os.FileMode(420), modTime: time.Unix(1455016719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesPrimaryParametersTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\xd0\x41\x0b\x82\x30\x14\xc0\xf1\x73\x7e\x8a\xb1\xb3\xf4\x01\xba\x89\x74\x90\x08\x04\xc3\x83\xd1\xe1\xa9\xaf\x1a\xcc\x29\xea\x0e\x26\xfb\xee\x2d\x93\x90\xc0\xbd\x0e\x1d\xc6\x18\xfc\xf9\xb1\xf7\xce\x1e\x63\xa3\x3d\x8c\xf1\x18\x5a\xa8\xb0\xc7\xf6\x80\x03\xdf\x31\x1e\xca\x5a\x97\x61\xad\xae\xe2\xc6\xfd\xaf\x24\x05\xa9\xf1\x15\x8d\xe3\x76\xd1\x19\xc3\x6d\x68\xfc\x75\x34\x52\x5d\x0f\xaa\xc0\xd3\xd0\xa0\x55\x37\x6b\xe8\xb2\xa3\x55\x7b\xc5\x20\x5a\xe7\x37\xe7\x86\xc6\x42\xa9\x3b\xfb\x4a\xc4\x03\x89\xb9\x3f\x1d\x8d\xa6\x4d\x11\x95\x4e\x6e\x2a\x68\x68\x2f\xf3\x44\xe7\x0a\x7b\x27\xf6\x4e\x68\xed\x08\xc5\x5d\x28\xfc\xa3\x18\x64\x4e\x26\xc8\x7e\x20\x2a\x41\xec\x6a\x2a\x66\xc8\xbb\x78\xcf\x00\x00\x00\xff\xff\x53\xe0\x1a\x70\xc5\x02\x00\x00")

func defaultTemplatesPrimaryParametersTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesPrimaryParametersTmpl,
		"default-templates/primary-parameters.tmpl",
	)
}

func defaultTemplatesPrimaryParametersTmpl() (*asset, error) {
	bytes, err := defaultTemplatesPrimaryParametersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/primary-parameters.tmpl", size: 709, mode: os.FileMode(420), modTime: time.Unix(1453134768, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesSecondaryCloudconfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x6f\x13\x31\x10\x3d\xb7\xbf\xc2\x2a\xdc\xc0\xbb\x51\x01\x01\x2b\xed\x81\xaa\x05\x21\x21\x51\xf5\x03\x84\xaa\xaa\x72\xec\xd9\xc4\xaa\xd7\x5e\xd9\xe3\xa4\x51\xc8\x7f\x67\xec\x6d\x9b\x4d\x29\xe4\xe3\xb2\x7a\xf3\x66\xe6\xcd\xf3\xcc\x0b\x69\x5c\x54\x5c\x3a\xdb\xe8\xc9\xbe\x74\x1e\x5c\xa8\xf6\x19\x8b\x9d\x12\x08\xd5\xde\x1e\x7d\x33\xe6\x61\xec\x1c\xf2\x80\x9e\xc0\xc9\xa2\x62\xae\x69\x28\x00\x28\xd5\x61\x95\x19\x4a\x07\xe9\x66\xe0\x29\x76\xb0\x5c\x16\x27\x14\x39\x7e\x80\x2e\xcf\xbe\xad\x56\x07\x99\x26\x14\x01\xa8\x03\x70\x69\x34\x58\xe4\xd1\x9b\x50\xb1\x29\x62\x57\x95\xe5\xcb\xce\xeb\x19\x75\xb8\xd1\xdd\xec\x6d\x75\xf8\xe6\xfd\xc7\x9c\xa4\xad\x46\x2d\x0c\x5f\x27\x77\x00\xfe\xff\xa9\x1f\x46\x39\xd5\xe8\x80\x60\x9f\x6d\x36\x2a\xf2\x7f\xdd\xe6\x9e\xbb\x73\x6d\x30\x20\x51\x3b\xcb\x51\xb7\xe0\x22\x56\xec\xdd\x68\x94\x42\x8d\x01\xc0\xde\x96\xe4\xd0\x4d\x00\x4f\xc2\xc3\xda\x99\x53\x6a\x11\x1e\x2c\x69\x01\x05\x79\x2d\x28\xec\x9d\x01\x3e\x77\xfe\x16\x7c\x8d\x3e\xc2\xeb\x80\x42\xde\xd2\xe3\xb4\x5d\x44\xe8\x21\x2a\x71\x21\x26\xf7\xd9\x91\x9c\x09\x7d\x27\xce\xac\x68\xa1\xea\xdf\xa4\x48\x2d\xb5\x84\x1c\x61\x8c\x0a\xb4\xc2\xaa\x8a\x51\x3d\x8f\x1b\xf4\xac\x75\x3b\x9d\xb1\xe5\x52\x37\xac\xf8\xe5\xe4\x34\xfe\x20\xf5\x34\xf7\x6a\xb5\x51\x69\x91\x42\xbb\x54\x02\x2b\xc6\x86\x12\xd2\x38\x8f\x3c\x4b\xd6\x93\x83\xbf\xd9\xe0\xb7\xbf\xfe\xbc\xba\xa4\x49\xaf\x07\xc0\x31\x04\xe9\x75\x97\xfc\xaf\xbf\x68\x61\x91\x9d\xcf\x85\x6f\x59\x16\x38\xe0\xfd\xa4\x50\xa8\x2d\x60\xb2\x95\x3b\x6b\xb4\x85\x82\xc4\x4c\x00\x07\xac\x4f\x0d\x92\xe5\xdb\x58\x47\xd0\xd0\x7d\xd4\x6d\x34\xa8\x79\xa4\x49\xff\xa6\x5c\x9d\xf7\xf3\x0f\xa5\x5e\x2c\x3a\xa8\x9d\x85\x30\x75\x43\xea\xc9\x1d\xc8\xf3\x64\xcb\x29\xd5\x2c\x63\xf0\xe5\x58\xdb\xb2\xbd\x55\xda\x33\xde\xb1\x72\xea\x5a\x28\xd3\x41\x26\x7c\x6b\xde\x9c\x74\x30\xce\xad\xe3\xb4\x6a\x63\x17\x20\x2f\x6f\xa0\xed\x55\x6e\x6e\x8d\x13\x2a\x14\x93\xe4\x53\x48\x36\x15\xda\x95\xf9\xbd\x4a\x5a\xa7\xcd\x37\xed\x71\xc6\xbf\x3f\x51\xd0\xe3\x5b\x75\xc8\x69\xeb\x14\x7b\x75\xb7\x73\x76\xfd\x1c\x91\x05\xc0\xd8\x31\x3e\x63\x5c\xd1\x54\x79\x7b\xb8\x12\xd0\x3a\x1b\xf2\x19\x10\x98\x37\x37\x4d\x9b\x74\xd7\x34\xc7\xe7\x04\x3c\xce\x41\x8c\x74\x0a\x43\x42\x3a\xbd\x61\x5c\x39\x49\x97\x36\x64\x1c\x67\x64\x73\xbf\xfb\xdf\x19\xb4\x42\xdb\xbc\x27\x27\x77\x1a\xeb\x05\x84\xe1\xb3\x7f\xb5\xa4\xd1\x98\xeb\x27\x9b\x07\xea\x68\xf1\xcf\x7d\x59\x2e\xc1\x2a\x6a\xf2\x27\x00\x00\xff\xff\xf1\xdb\xf5\x1c\x83\x05\x00\x00")

func defaultTemplatesSecondaryCloudconfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesSecondaryCloudconfigTmpl,
		"default-templates/secondary-cloudconfig.tmpl",
	)
}

func defaultTemplatesSecondaryCloudconfigTmpl() (*asset, error) {
	bytes, err := defaultTemplatesSecondaryCloudconfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/secondary-cloudconfig.tmpl", size: 1411, mode: os.FileMode(420), modTime: time.Unix(1455099732, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesSecondaryCloudformationTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x10\x3a\x25\x40\x9a\x0f\x27\xef\xbb\xad\x6f\xae\x92\x36\xde\x26\xa9\x11\xb9\x5e\xa0\x45\x0e\x34\xc5\xd8\x44\x25\xd1\xa0\xa8\x34\xde\x20\xff\x7d\x87\x94\x64\x8b\x94\xc8\xd8\x69\xd1\xf6\xd0\xdd\x05\xb6\xf5\x0c\x67\x9e\xf9\x1e\x91\x8f\x3b\x08\x05\x83\x7f\xa2\x31\x4d\x17\x09\x96\xf4\x1d\x17\x29\x96\x13\x2a\x72\xc6\xb3\xa0\x8f\x82\xde\xd1\xf1\xd1\xab\xa3\x37\xf0\x5f\xb0\x0f\xbc\xc0\x7d\x46\x73\x22\xd8\x42\x56\x0c\xef\x19\xce\x24\x8a\xbe\x61\x91\x22\x9e\xa1\xf3\xb0\x57\x33\x8e\xb0\xc0\x29\x95\x20\x0b\xf8\x1e\xf5\x6f\x4a\x59\xca\x86\x71\xe3\x07\xf8\x69\xbc\x5c\x50\x25\x2a\x92\x82\x65\xb3\xea\x78\x97\x2e\x7d\x16\xf1\x3b\x84\x51\xc8\x05\xfd\x18\x21\x96\xe2\x19\x45\x77\x5c\x20\x39\xa7\x28\x5f\x50\xc2\xee\x18\x8d\x11\xcb\x72\x89\x33\x42\x91\x04\xd9\x08\x67\x31\x12\x74\xa6\xa4\x54\xb2\x9f\x6a\x25\xc1\x64\x41\x5e\x8c\x47\x9f\x55\x78\x96\xbc\x10\x88\x3e\xb0\x5c\xc2\x01\x34\x61\x42\x16\x38\x41\x23\xc1\xee\xc1\xa7\x28\x4c\x78\x11\xa3\xdd\xc9\x28\xdc\x6b\xeb\x8f\x8a\x69\x46\x65\x37\x80\x90\xa7\x29\x3e\xa3\x09\x4b\x99\xa4\xf1\x25\x88\xf7\x80\x19\x83\x03\x4a\x61\x43\x65\x7f\x89\x69\x2b\x28\x83\xcf\x3f\x08\x46\x02\x2c\xca\x2d\x83\x7b\xcc\x12\x3c\x65\x09\x93\xcb\xcf\x3c\xa3\xb9\x8e\xd4\x0b\x80\x25\x09\xff\x16\x45\x17\xef\x04\x4f\x4d\x88\x67\xf4\x0e\x17\x89\x72\x5f\x70\x74\xa0\xff\x3d\x3c\x7a\x06\x1c\x38\x08\x4d\x13\x4e\xbe\xa2\xdd\x70\x78\x76\xb3\x07\x99\x83\x21\x81\xa3\x0b\xc4\x72\x84\x4b\xc4\x09\x24\x0e\x3f\x68\x0a\xb2\x72\xa2\x05\x31\x4c\x8a\x1c\x52\x3d\x62\xff\x52\x27\xc2\x63\x0f\xb2\xeb\x22\x9d\x52\xa1\x9c\x96\xf1\x18\x1c\x05\x01\x24\xa5\x48\xb4\x7b\xfc\xea\xb8\xb7\x67\xa0\xb9\xc2\x0f\x13\x9c\x14\x1a\xd1\x71\xcf\xa0\xb0\x6c\x4d\xe9\x32\xa0\x54\xd4\x36\x60\x58\x55\x4c\xc5\xb7\xb6\xa0\xf6\x3f\x8d\xb5\x60\x55\xcc\x5f\x1a\x44\xcd\x20\x7b\x07\x19\xce\x78\x43\xdf\x9a\x90\x32\x22\xba\x29\x79\x8a\x93\xa4\xfb\x0c\x8d\x59\x91\x76\x92\x12\x2c\x66\xb4\x4d\x49\x4f\x3d\x94\x07\x37\xa9\xe7\xa1\x9d\x7a\x68\xc7\x47\x4e\xe2\x89\x13\x3e\x90\xdc\x87\x3c\xf2\x9c\x20\x89\xd3\x6a\xe2\xb6\x9a\x78\xac\x26\x1e\xab\x81\xf6\xda\x49\x73\x5a\x46\xdc\x96\x11\x9f\x65\x27\x1e\x20\x27\x6e\x20\xb3\x9e\x5b\x26\xd0\x9c\xe7\x84\xd3\x00\xe1\x36\x40\x78\x0c\x10\x1e\x03\x84\xc7\x00\xd6\x73\xaa\x63\x1e\xdb\x80\xe6\x54\xc7\x3c\x76\xc7\x6e\x75\xb1\x47\x5d\xec\x51\x17\xaf\xd5\x35\x48\xb7\x8d\x5e\x14\x72\x68\x36\x02\xb3\x4c\x5a\x5d\xf0\x0a\x3a\x1e\x9a\xc2\xc0\x46\xf7\x38\x61\xb1\xda\x26\xd0\xc5\xe4\xca\x1c\xe7\x07\x66\x1b\x5d\xb5\xd7\xae\xbe\x61\xb7\x59\x25\xd0\xdc\x0d\x76\x57\xc7\xf6\x11\x95\x64\x6f\xab\xae\xff\x81\x2e\x47\x98\x09\xbb\xe3\xb7\x67\x0e\x2c\x42\x7a\x6f\xd1\x0b\x12\x82\x63\x48\x9d\x83\x21\x83\xb0\xea\xad\x7a\xfc\x60\x42\x68\x9e\xab\xdf\xd4\x2e\x53\xa3\xdc\x72\x0a\xc1\x14\x05\xef\xde\xb1\x99\x17\xd3\x0d\x2c\x43\x10\x81\x25\xcc\x18\x38\xf0\x8a\xe8\x13\xa8\xfc\x5f\x21\xb0\x62\x43\xbb\x53\x9c\xd3\xff\x9f\xee\x6d\xa3\x3f\x8a\x2e\x43\x2a\x24\xec\x60\x04\x86\xba\x17\xc2\xe0\xe6\xba\xf2\x08\x1c\x42\x8d\x53\xab\x6d\xae\x9a\x7f\x1b\xe8\xdf\x69\xa0\x00\xdb\x72\x58\x30\x08\x35\xb6\xce\x51\x31\x4d\x18\x39\xbf\x7c\x1b\x51\x52\x08\x58\x47\xde\x0b\x5e\x2c\xba\xd7\x1d\x58\x87\xfb\x7d\x08\x53\xbf\x6f\x32\x37\x70\x8c\x04\x5f\x28\xc4\x86\x12\x4d\xd1\xac\x96\xa9\xa5\x72\x04\xda\x91\x4b\x62\x73\x11\x55\x26\xdc\xad\xd6\xcb\x60\xed\xde\xd2\xc5\x4d\x09\xc3\x6c\x26\x20\x67\xac\x91\xfc\x68\x54\x64\x30\x5c\x00\x5c\xc9\x09\x4f\x74\x95\x90\x85\x55\xb2\x81\x5a\xab\x46\x5c\xe8\x22\x7a\x7d\x64\x53\xc7\xdc\x4d\x0b\x59\x2c\x86\x0b\x73\xfb\x6a\x70\x3c\x99\xec\x8f\x76\xa7\x78\x0e\x99\x85\xed\xf4\xf4\xa4\xcd\xb0\x86\xd7\x49\x7e\x06\x61\x9d\x3c\xe5\x3f\xb7\x6e\x4f\x9f\x77\x39\xfa\xfb\x4d\x6a\xb9\xd4\xef\xf0\xad\x0d\xda\xb1\x7f\x5d\xd7\x6a\xb5\x79\xff\xaa\x9a\xa8\xf6\xfe\x9f\x56\x14\xbf\x7f\xac\x36\x49\x3e\x5f\x40\xeb\x0d\xfe\x57\x84\xf3\x3c\xd3\x1f\x4d\xf5\x27\x0b\x81\x2f\xc6\x22\x53\xed\x5c\xd1\x7f\x5e\x44\x57\x0e\x5f\x4b\x37\xbe\x1d\xed\x8e\x64\x45\xb8\xd7\x6b\xc7\x70\x83\x24\x59\x27\x01\x08\x30\xe3\xfb\x63\x1b\xe0\xf6\x19\x18\xe9\x51\x68\x3a\x33\xb6\x02\x5a\xb1\x56\xfe\x72\x4c\x4a\x8b\xff\xe9\x45\x2d\xa7\x8a\x23\x44\x63\xab\xb4\xac\xc3\xbf\x79\x76\x96\x36\xd6\x26\x75\x17\x86\x99\x6f\xfe\x48\xf8\xb2\xc4\x0c\xbf\x99\xc4\x1b\x79\xdf\x0f\x73\xa7\xcb\xcd\x6d\xd7\x9e\x27\x38\x97\x8c\x5c\x72\x1c\xbf\xc5\x89\x12\x23\xca\x48\x06\xa8\xed\x6a\xb4\xf2\xb5\x7d\x0a\xb6\xaa\x7e\xbf\x29\xc4\xe1\x74\x64\x79\xbd\xbc\x78\xca\x8d\xca\xab\x6e\xb6\x7c\x85\xdd\x51\xd2\xcf\x25\xa2\xa7\x67\xaa\x9b\x29\x9a\xa9\xfb\x46\x80\xf7\xc5\x72\xb2\xe1\x19\x15\x2f\xe5\x84\xde\xc9\x5f\x6f\xec\x9d\xa6\x0e\x83\x97\x69\x95\x2c\x8a\x61\x1c\x8e\x9c\x5b\xcf\x66\x28\xda\x9b\x55\x07\x8a\x36\x93\x17\x85\xe9\x9b\x0b\x8a\x13\x39\x0f\xe7\x94\x7c\xb5\x83\xa7\xb2\x42\x7d\xad\x69\x3d\xe0\xff\x77\x59\xbf\xff\x37\x67\x99\xf6\x22\x0a\x82\x7d\xf4\x25\xb8\x18\x8f\x47\x7d\xf8\x53\xe5\x0c\x14\x1c\xde\x57\x77\xc4\xb7\xb7\x56\x93\xab\x54\x2d\xc7\x73\x28\xda\x39\x4f\x62\x8d\xce\x5e\xcd\x82\x4f\xd9\xbc\x8b\xef\x7f\x6d\x47\xc0\x40\x81\xaf\xc1\x52\x4a\x7b\x3b\x65\x29\xe5\x85\xac\xce\x7e\x47\xb1\x94\xfb\xc8\x6f\x57\x2d\x64\x4e\x53\xdd\x1b\x99\xf2\x43\x86\x93\xe0\x85\xd5\xe4\xd8\xf6\xfe\x94\xd3\x86\x28\xfe\x94\x93\xf5\xa7\x75\x39\xd5\xb7\x09\x11\x48\xa6\x62\x50\x48\x1e\x11\x9c\x50\xcf\x8c\xaf\x79\x74\x01\x35\xfe\xb2\xc5\x16\xda\x7a\x5b\x70\xce\xd5\xc1\x67\x67\x3a\x05\x93\x51\xa8\x0e\x0f\x63\x9a\xa9\xfb\x07\x2a\x9c\x52\xaa\xfa\x74\x4a\x82\x85\x98\x09\x1a\x87\x78\x81\x09\x40\x72\xca\x69\x3e\x14\x38\x85\x5d\xe2\x22\x23\xf3\xb0\x79\x1f\x73\x8d\x53\xfb\x5e\x7e\x2d\xd4\x8c\x40\xf3\xb4\x5b\xc7\x15\x7e\xa8\x5e\x2b\xcc\x27\x04\xa4\x1f\x11\x56\x24\x93\xd2\x2c\x38\x85\xa8\xec\x0d\x8e\x9e\xe3\xd9\x49\xec\xc5\xd8\x7b\xa6\x6e\xcd\xee\x56\x35\xc6\xb3\x0d\xbe\x0e\x3e\xd0\xa5\x7e\x01\x51\x9e\x6c\x6d\xca\x2a\xd3\xf0\x0c\xf4\x0c\x64\xe9\x3f\x60\x95\xa2\xa0\x2d\xc6\xfa\x79\xa5\xf1\x89\xa1\x52\x3a\x92\x98\x7c\xd5\xa2\x5f\xb8\x1c\x7b\x62\xb8\x61\x21\x75\x64\xcd\x66\xb5\x34\x54\xaf\xa8\xd6\x57\x59\xf9\x4e\x6b\xe5\x8c\xfd\x48\xd4\xda\x5d\xcb\x81\x69\x1e\x02\xb7\xd7\xc9\xbb\xe2\xaf\x2f\x4e\x5f\xba\x1c\x76\xef\xca\x9e\x0c\xf9\x94\x53\x71\x86\x25\x36\x50\x34\xaf\x4b\x2d\x24\x6f\xd5\x0b\xe1\x19\xbd\x67\x84\x5e\xe1\xc5\x02\xfc\xdb\x39\x06\x4b\x8e\xca\xbc\xe0\x30\xa6\xf7\x87\x0f\xf7\x31\xb6\xdb\xea\xf9\xb4\x1a\xf6\x13\x9e\x14\x29\xd5\xc5\xa5\x5a\xec\x6b\x13\xf2\x53\x47\x7e\xec\x34\xb2\x24\xf8\x58\xc8\x45\x21\x8d\x9b\xcd\x4f\x37\x97\xde\x7b\xd6\xb3\xeb\x48\xdd\xb3\xea\xe7\x71\x95\xa2\xcd\x8c\x68\xa4\xb2\x9a\x52\xef\xa9\x1c\x48\x59\xcd\x29\x77\xf1\xee\x6b\xa1\x65\xaa\xdf\x5a\x38\x77\x9e\x76\xfe\x0b\x00\x00\xff\xff\x19\xe9\x01\xa7\x53\x20\x00\x00")

func defaultTemplatesSecondaryCloudformationTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesSecondaryCloudformationTmpl,
		"default-templates/secondary-cloudformation.tmpl",
	)
}

func defaultTemplatesSecondaryCloudformationTmpl() (*asset, error) {
	bytes, err := defaultTemplatesSecondaryCloudformationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/secondary-cloudformation.tmpl", size: 8275, mode: os.FileMode(420), modTime: time.Unix(1455016719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesSecondaryParametersTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\xb1\x0a\x83\x30\x10\x80\xe1\xb9\x3e\x45\xc8\x2c\x7d\x80\x6e\x92\x49\xda\x41\xb0\x38\x58\x3a\xa4\x7a\x96\x80\x46\x89\xc9\x60\xc5\x77\x6f\x14\x07\x5b\xda\x3b\x87\x10\x02\x3f\x1f\x39\xee\x16\x30\x36\xfa\xc3\x18\x4f\xa4\x91\x0d\x58\x30\x67\x18\xf8\x89\x71\x51\xb7\xae\x14\xad\xae\xd4\x93\x87\x5f\x49\x26\x6b\x07\x73\x34\x8e\xc7\x4d\x37\x4d\xdc\x87\x53\xf8\x1f\x4d\xd3\x8b\x00\x63\x55\xa5\x0a\x69\x01\x75\x3f\x53\x9a\x8e\x75\x6f\xa5\x2e\xe0\x3a\x74\x33\x7c\xf8\xad\x6e\x2b\xda\x14\xb5\xeb\xfd\x2b\x55\x2f\xfc\xaf\x9b\x8e\x46\xfd\x95\x48\x65\x50\x70\x6d\x68\x2c\xeb\x8a\xb8\x44\xa9\xa5\xd8\xb1\x19\xf7\xd0\x60\xf1\x8d\x2c\x09\x4d\x45\x39\xca\x44\xf9\x0e\xa2\x51\xc4\x58\x4b\xb1\x42\xc1\x3d\x78\x07\x00\x00\xff\xff\x6a\x18\x3e\x36\xc9\x02\x00\x00")

func defaultTemplatesSecondaryParametersTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesSecondaryParametersTmpl,
		"default-templates/secondary-parameters.tmpl",
	)
}

func defaultTemplatesSecondaryParametersTmpl() (*asset, error) {
	bytes, err := defaultTemplatesSecondaryParametersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/secondary-parameters.tmpl", size: 713, mode: os.FileMode(420), modTime: time.Unix(1453134768, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesStandaloneCloudconfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4f\x6f\xd4\x3e\x10\x3d\xb7\x9f\xc2\xea\xef\x77\x43\x4e\x56\x05\x04\x44\xca\x81\xaa\x05\x71\x02\xd1\x16\x84\xaa\xaa\xf2\xda\x93\x5d\xab\x8e\x27\xb2\x27\xbb\x5d\x2d\xfb\xdd\x19\x27\x34\xdd\x94\xaa\x4a\x9d\x93\x67\xde\xfc\x79\x33\xcf\xf9\x4f\x3b\x6c\x8d\xd4\xe8\x2b\xbb\x38\xd4\x18\x00\x63\x71\x28\xf8\xb4\x8d\x51\x04\xc5\xc1\x41\x77\x4b\x27\xc0\x1c\x91\x64\xa4\xc0\x8e\xc5\xa6\x10\x58\x55\x9d\x13\x48\x9b\xe3\x62\xc0\x19\x1b\x35\xae\x20\x30\x62\xbb\xcd\x4e\xef\x6f\x97\xc1\xed\x76\x03\x48\x19\xb6\x91\x8d\x20\xb5\xb3\xe0\x49\xb6\xc1\xc5\x42\x2c\x89\x9a\x22\xcf\xff\x6f\x82\x5d\x71\x95\x1b\xdb\xac\xde\x14\xc7\xaf\xdf\x7d\x18\x02\xad\xb7\x64\x95\x93\x0f\x09\x1a\x80\xf0\x7c\xf8\xfb\xd9\x10\xee\x6c\x24\xf0\x4f\x16\x9d\x65\xdd\x37\x2e\xf7\x17\xff\xa2\x1a\xe0\x40\x93\x45\x2f\xc9\xd6\x80\x2d\x15\xe2\xed\x6c\xd6\xbb\x2b\x07\x40\x0f\xa3\x4a\x93\xbb\x89\x10\x98\xca\x24\xf2\x35\x90\xe2\xb5\xa8\x42\x1c\xf1\x68\x2f\xd4\x22\xee\x76\x47\xfd\xba\x78\x2c\xf1\x3e\xb1\x14\x5e\xd5\x50\xf4\x8b\xc9\x52\x7e\xab\x61\x48\xa2\xb1\xae\x95\x37\x85\x88\xa4\x02\x3d\x0a\xe9\x1a\x9c\x16\x22\x78\xbd\xb6\x12\xd9\x2f\xd4\xcb\xf6\x07\x33\x60\xca\xc3\x86\xef\xf3\x6d\x92\x73\x6a\x3e\xf0\x6a\xee\x38\x88\x42\xbb\x8f\xf5\xbc\x01\x1e\xe2\x6f\xb1\x77\x0e\xf7\x2f\x57\x97\xcc\xfe\x7a\x64\x3a\x85\xa8\x83\x6d\xd2\x1a\xca\xcf\x56\x79\x12\xe7\x6b\x15\x6a\xd1\x35\x3b\x42\xfe\x64\x67\x2c\x3d\xd0\x1a\xc3\xad\x44\xef\xac\x87\x8c\xdb\x5a\x00\x8d\x70\x1f\x2b\x82\x30\x01\x77\x02\x15\x3f\xa3\xb2\x6e\x1d\x59\xd9\x32\xf3\xa7\x40\x57\xe7\xfd\x44\xc6\x4d\x5f\x6c\x1a\x28\xd1\x43\x5c\xe2\x18\x7e\x76\x07\xfa\x3c\x8d\xea\x1b\x67\xce\xdb\x18\xf2\xb9\xf5\x79\x7d\x6b\x6c\x10\xb2\x11\xf9\x12\x6b\xc8\xd3\xeb\x4d\xf6\x09\x91\x6b\xee\x47\x48\xe9\x51\xb2\xf2\xe6\x18\xa1\xd3\x5e\x64\xf1\x19\x5c\x7b\x87\xca\xc4\x6c\x91\xa6\x16\xd3\xd0\x32\x8b\x79\xb7\xc7\x9c\x45\x37\xde\x76\x6f\x17\xf2\xeb\xa3\x1e\x7a\xfb\x84\x4e\xf4\xb2\x46\x23\x5e\xdd\xbd\x20\xbe\x7c\x0a\x2a\x22\x50\xdb\x08\xb9\x12\xd2\x30\xb3\x4e\x57\xd2\x28\xa8\xd1\xc7\x32\xe9\x89\x8d\x9d\xb6\x13\xe3\xd4\x7b\xc9\x5c\x3e\x25\xc3\xc0\x85\x11\xe9\xc1\xec\x03\xce\xf8\xbe\xef\x37\xa8\x6f\xf9\x47\xb0\x87\x38\xed\x2c\x8f\xd5\xdf\x9f\xef\x50\x2b\xeb\x3b\xdd\x9c\xdd\x59\x2a\x37\x10\xc7\x22\xf8\xe2\xb9\x4f\xe7\xae\xff\xd1\x23\x98\x93\xcd\x33\x0a\xda\x6e\xc1\x1b\x2e\xf6\x27\x00\x00\xff\xff\xca\x4b\x97\x5b\xbe\x05\x00\x00")

func defaultTemplatesStandaloneCloudconfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesStandaloneCloudconfigTmpl,
		"default-templates/standalone-cloudconfig.tmpl",
	)
}

func defaultTemplatesStandaloneCloudconfigTmpl() (*asset, error) {
	bytes, err := defaultTemplatesStandaloneCloudconfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/standalone-cloudconfig.tmpl", size: 1470, mode: os.FileMode(420), modTime: time.Unix(1455099732, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesStandaloneCloudformationTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x59\x4d\x6f\xdb\x38\x13\x3e\xa7\xbf\x82\xd0\x29\x01\xda\xd4\x51\x82\xf7\x6d\x7d\x73\xe5\xb4\x35\x9a\xa4\x46\x94\x7a\x81\x16\x3d\xd0\x14\xe3\x12\x95\x44\x81\xa2\xdc\x64\x17\xf9\xef\x3b\xa4\x3e\x2c\x7e\xc8\x76\xba\xdd\xee\x76\xd1\x02\x81\x86\xe4\x3c\xc3\x67\x86\x33\x93\xc9\x1f\x4f\x0e\x82\xc9\x6f\xf1\x0d\xcd\x8a\x14\x4b\xfa\x9a\x8b\x0c\xcb\x05\x15\x25\xe3\x79\x30\x46\x41\x38\x3a\x19\x3d\x1b\xbd\x84\xff\xc1\x53\xd8\x3a\xa5\x25\x11\xac\x90\xcd\xea\x1b\x86\x73\x89\xe2\x6f\x58\x64\x88\xe7\xe8\x3c\x0a\xf5\xae\x39\x16\x38\xa3\x12\xb4\xc0\x26\x40\x00\x88\x8c\xcd\x92\xe6\xe3\x20\xb8\xb9\x2f\xa8\x3a\x1e\x4b\xc1\xf2\x95\x3a\x72\xe0\xa8\xd6\x27\x10\xbf\x45\x18\x45\x5c\xd0\xf7\x31\x62\x19\x5e\x51\x74\xcb\x05\x92\x5f\x28\x2a\x0b\x4a\xd8\x2d\xa3\x09\x62\x79\x29\x71\x4e\x28\x92\xa0\x16\xe1\x3c\x41\x82\xae\x94\x16\x50\xfb\xa0\x74\x07\x8b\x82\x3c\x12\x5d\x9f\x50\xe8\xf7\xbc\x12\x88\xde\xb1\x52\xc2\x5e\xb4\x60\x42\x56\x38\x45\x73\xc1\xd6\xc0\x16\x8a\x52\x5e\x25\xe8\x70\x31\x8f\x8e\x36\x68\x71\xb5\xcc\xa9\x74\xe0\x22\x9e\x65\x78\x4a\x53\x96\x31\x49\x93\x0b\xd0\xe8\x87\xbe\x81\xcb\xd5\x2a\x66\xea\x6e\xb5\x05\x7b\x01\x4f\x3e\xfe\x25\xd0\x14\x56\xd5\x95\x27\x6b\xcc\x52\xbc\x64\x29\x93\xf7\x1f\x79\x4e\x4b\xcd\xf9\x23\xcc\x48\x53\xfe\x2d\x8e\xdf\xbe\x16\x3c\xeb\x0c\x9a\xd2\x5b\x5c\xa5\x8a\x95\x60\x74\xac\xff\x3d\x1f\x0d\x9b\x02\x97\x47\xcb\x94\x93\xaf\xe8\x30\x9a\x4d\xaf\x8f\xc0\xe3\x18\xe2\x2c\x7e\x8b\x58\x89\x70\x6d\x5f\x0a\x0e\xe7\xc7\x8d\x0e\xcb\xa7\x9d\x2d\x51\x5a\x95\x10\x87\x31\xfb\x9d\xfa\x4c\x39\xf1\x9b\x70\x55\x65\x4b\x2a\x14\x17\x39\x4f\xe0\xfe\xe0\x05\x52\x2b\x42\x87\x27\xcf\x4e\xc2\xa3\x16\xf6\x12\xdf\x2d\x70\x5a\x69\xe8\x93\xb0\x15\xb2\x7c\x23\xb4\xec\xab\x35\x6f\xec\x9b\x35\xb1\xdb\xac\xd7\x06\x6a\x02\x69\xa2\x95\xa8\x17\xf4\x49\x49\x0f\x02\x19\x1e\xe7\x38\xe7\xb5\x46\xfd\x99\x31\x22\xfa\xdf\x65\x86\xd3\xb4\xbf\x4e\x13\x56\x65\x3d\x41\x8a\xc5\x8a\xb6\xdf\xd9\x99\xf3\x7d\x67\x0b\x42\x47\x72\xe6\x48\x4e\x46\x96\xe8\xd4\x02\x06\x81\xbd\xc1\x39\x61\x01\x11\xcb\x36\x62\xdb\x46\x1c\xdb\x88\x63\x1b\x48\x5e\x58\x12\xcb\x12\x62\x5b\x42\x5c\x4b\x4e\x1d\xb5\xa7\xb6\xda\x55\x68\x9f\x02\x89\xb5\x47\x58\xd0\xc2\x86\x16\x0e\xb4\x70\xa0\x85\x03\xcd\xc2\x63\x47\x10\x3a\x92\x33\x47\x62\xa9\x49\x6c\x35\x89\xa3\x26\x71\xd4\x24\x1b\x35\x4a\xf0\xb9\x0e\xf5\x88\x43\x4c\x0b\xcc\x72\x69\xbd\xaa\x4b\x78\x41\x68\x09\x19\x1a\xad\x71\xca\x12\x55\x2d\xd0\xdb\xc5\xa5\x99\xbf\x8f\xbb\x17\xd9\x3d\x52\x2b\x90\xed\xc7\xaa\xd4\x98\x25\xe0\xb0\x3b\xf1\x14\x51\x49\x8e\x76\x25\x89\x77\xf4\x7e\x8e\x99\xe8\x25\x08\x37\x21\x41\x3d\xd3\xc5\x48\x17\x39\x04\x27\x90\x3a\x02\x19\x08\x61\xf5\x5a\x75\x6e\xc2\x84\xd0\xb2\x54\x32\x55\xa0\x5a\x9b\x76\xa7\x28\xc8\xa1\x40\xda\x2d\x5b\x0d\x59\x70\x0d\xf5\x0c\x38\xbd\x87\x2c\x04\x7b\x9f\x11\xbd\x19\xd5\x3f\x2a\x81\xd5\x36\x74\xb8\xc4\x25\xfd\xdf\xd9\xd1\x0e\xb4\x38\xbe\x88\xa8\x90\x50\x39\x09\x24\xf0\x21\xc0\xc9\xf5\x55\x73\x5b\xd8\x8f\x7a\x07\xba\xf2\xdb\xe4\xc3\x61\xb4\x27\x1a\x10\x4c\x2f\xa1\x70\x10\xda\x75\x02\xf3\x6a\x99\x32\x72\x7e\xf1\x2a\xa6\xa4\x12\x50\x62\xde\x08\x5e\x15\x4e\xe1\x82\x9e\x64\x3c\x06\xaa\xc7\x63\x73\x5f\x8d\x37\x17\xbc\x50\x46\x75\x6a\x41\xa6\xd7\xad\x7b\xd4\x60\x08\xd0\x90\x47\x8d\xd5\x18\x1c\x28\x6b\x6f\xbb\xea\xaf\x63\xba\x66\x4d\xf1\xd6\x3f\x3e\xcb\x57\x02\x3c\xad\x52\x73\x7b\x72\x56\x80\x4d\x92\x13\x9e\xea\x90\x25\x2d\xc4\x41\xa0\xca\xe0\x9c\x0b\x1d\xca\x2f\x46\x9d\xf8\x86\x7b\x84\x11\x4b\xc4\xac\x30\x8b\x64\x63\x06\x7a\x1c\xd2\xd9\xd9\xa9\x07\xaa\x2f\x1d\xc6\xfa\xec\xbb\xf3\xf9\x4f\xbf\xf2\x67\xf5\xe3\xa1\x8b\xdc\xa6\xe7\xf8\x59\x91\xd3\x74\x38\xff\x81\xd0\xf9\x77\xba\xb3\xed\x7c\x7e\x86\x33\xcf\x73\xdd\x2e\xb6\x3d\x1c\x81\xa6\xb8\xca\x55\x3e\x53\xeb\x3f\xdc\x9f\x1d\x05\x8d\xa0\xd3\x65\x34\xc6\xf5\xda\x83\x8f\xe3\x30\xec\xe8\x1c\x76\xca\x86\x7d\xd8\xfe\x7d\x39\x62\x97\x2f\x63\x9d\xb9\xcd\xeb\x26\x9e\x7b\x0d\xa4\xf4\xe6\x86\x03\xde\xd7\xb4\x01\x19\xfb\xba\xbc\x25\x7a\x87\xe7\x7d\x3e\xf4\x87\x9a\xe1\xd3\x21\xc2\xfc\x7e\x31\xc9\x6f\xc3\x62\x3b\x5b\xfb\x18\xe3\xe5\x28\x3c\xfd\xff\xcb\x5f\x89\x24\x65\xae\x4b\x53\x4f\xfa\xf7\x11\x05\xb1\xfb\x2b\x11\xd5\x3d\x35\x83\xa8\x8d\xf4\x87\x13\x75\x9e\xe2\x52\x32\x72\xc1\x71\xf2\x0a\xa7\xea\x8c\xa8\xdf\xee\x00\x6d\xf6\x76\xe8\xed\xc6\xe3\xfe\xe9\x2d\xfc\xd5\x23\x8c\xd2\x35\xb7\x19\x8f\x0c\xa7\x54\x23\x99\xee\x91\x62\xba\x02\xa7\xc6\x1b\x34\xaf\xa7\x4e\x9d\x02\xe3\xb2\x9e\x36\xa8\x65\xcf\x93\xff\xfa\x4e\x84\x3e\x78\x93\x17\x8d\x1e\xda\x9b\x12\xad\x36\xdb\x48\x85\x9b\x34\xed\xb3\xad\x87\xbf\xa7\x69\x37\xd1\xdc\x5f\x62\x7d\xee\xae\xdb\x9a\x7f\xdc\xdf\xe4\x0b\xcd\x34\x30\xfc\x9a\x48\x45\x8e\xbb\xa9\xc5\xee\x48\x18\x68\x03\xbf\x33\x14\x7e\x20\xdd\x31\x15\x6b\x2a\x26\x95\xe4\x31\xc1\xe9\x00\xc7\xed\xb2\xa6\xb6\xf7\xb1\xab\xad\x71\x86\x72\x2e\xd1\x93\x8f\x26\xc9\x8b\x79\xa4\x76\xce\x12\x9a\xab\x40\xa4\x62\x3f\xdf\x40\xef\xc4\x04\x4d\x22\x5c\x60\x02\x60\xee\xa1\xfe\x4c\xcd\x38\x79\x81\xab\x9c\x7c\x89\xfa\xbf\x96\x5e\xe1\x8c\x7a\x60\x35\x53\xfd\xed\xa6\xa2\x4b\x7c\xd7\x4c\xec\xba\xa9\x9a\x1e\xab\x75\xc2\x56\xd6\xf7\xa8\x82\xf2\x05\xcc\x70\xd2\xb3\x9f\xe3\x96\x03\xcd\xb3\x31\x83\xec\x06\xaf\x0c\xc0\x77\x54\xb1\x15\xe8\x3b\xf7\x22\xa7\xc0\x2b\x38\x3b\x91\xf5\x7d\x61\x87\x14\x15\x6d\xd7\xdb\x49\xa1\xd3\x2b\xaa\x60\x89\x25\x26\x5f\xb5\xba\x6d\xbd\x94\x87\xcd\xdd\xa1\xe7\xf1\xd5\x96\xe8\x9b\xa9\xd1\xbb\xaf\xf6\xd4\x73\x7d\xb3\xf8\x79\x46\x9a\x6e\xb1\xd2\xab\xc6\x39\x60\xcf\x1f\x2d\xed\x78\xe6\x71\x15\x63\x5b\x55\x6c\x1d\xf8\xa1\xa4\x62\x8a\x25\xf6\xc5\xf8\x66\x28\x63\xe0\xbe\x52\x53\xe9\x29\x5d\x33\x42\x2f\x71\x51\x00\x97\x06\x78\xbd\xd2\xdc\x23\x78\x9e\xd0\xf5\xf3\xbb\x75\x82\xbb\x70\x38\x5f\x96\x7d\x67\x2f\x78\x5a\x65\xb4\x0d\xeb\x17\x43\x6e\x6e\x66\x29\xef\x2b\x59\x54\x5d\x8a\x0d\x3e\x5c\x5f\x04\x03\xf3\x9b\xe9\x55\xac\xe6\x37\xfa\xef\x24\x2a\x86\x1a\xd7\x9a\xc1\x16\xbc\xce\xc7\xe3\x37\x54\x4e\xa4\x4a\x77\x9f\xb6\x3c\x94\xa7\x5a\xa3\xbe\x95\x61\xd4\x93\x87\x3f\x03\x00\x00\xff\xff\xd0\xfd\xe4\x3e\x3f\x1a\x00\x00")

func defaultTemplatesStandaloneCloudformationTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesStandaloneCloudformationTmpl,
		"default-templates/standalone-cloudformation.tmpl",
	)
}

func defaultTemplatesStandaloneCloudformationTmpl() (*asset, error) {
	bytes, err := defaultTemplatesStandaloneCloudformationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/standalone-cloudformation.tmpl", size: 6719, mode: os.FileMode(420), modTime: time.Unix(1455016719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultTemplatesStandaloneParametersTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\xb1\x0a\x83\x30\x10\x80\xe1\xb9\x3e\x45\xc8\x2c\x7d\x80\x6e\x92\x49\xda\x41\xb0\x38\x58\x3a\xa4\x7a\x96\x80\x46\x89\xc9\x60\xc5\x77\x6f\x14\x07\x5b\xda\x3b\x87\x10\x02\x3f\x1f\x39\xee\x16\x30\x36\xfa\xc3\x18\x4f\xa4\x91\x0d\x58\x30\x67\x18\xf8\x89\x71\x51\xb7\xae\x14\xad\xae\xd4\x93\x87\x5f\x49\x26\x6b\x07\x73\x34\x8e\xc7\x4d\x37\x4d\xdc\x87\x53\xf8\x1f\x4d\xd3\x8b\x00\x63\x55\xa5\x0a\x69\x01\x75\x3f\x53\x9a\x8e\x75\x6f\xa5\x2e\xe0\x3a\x74\x33\x7c\xf8\xad\x6e\x2b\xda\x14\xb5\xeb\xfd\x2b\x55\x2f\xfc\xaf\x9b\x8e\x46\xfd\x95\x48\x65\x50\x70\x6d\x68\x2c\xeb\x8a\xb8\x44\xa9\xa5\xd8\xb1\x19\xf7\xd0\x60\xf1\x8d\x2c\x09\x4d\x45\x39\xca\x44\xf9\x0e\xa2\x51\xc4\x58\x4b\xb1\x42\xc1\x3d\x78\x07\x00\x00\xff\xff\x6a\x18\x3e\x36\xc9\x02\x00\x00")

func defaultTemplatesStandaloneParametersTmplBytes() ([]byte, error) {
	return bindataRead(
		_defaultTemplatesStandaloneParametersTmpl,
		"default-templates/standalone-parameters.tmpl",
	)
}

func defaultTemplatesStandaloneParametersTmpl() (*asset, error) {
	bytes, err := defaultTemplatesStandaloneParametersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default-templates/standalone-parameters.tmpl", size: 713, mode: os.FileMode(420), modTime: time.Unix(1453134768, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"default-templates/primary-cloudconfig.tmpl": defaultTemplatesPrimaryCloudconfigTmpl,
	"default-templates/primary-cloudformation.tmpl": defaultTemplatesPrimaryCloudformationTmpl,
	"default-templates/primary-parameters.tmpl": defaultTemplatesPrimaryParametersTmpl,
	"default-templates/secondary-cloudconfig.tmpl": defaultTemplatesSecondaryCloudconfigTmpl,
	"default-templates/secondary-cloudformation.tmpl": defaultTemplatesSecondaryCloudformationTmpl,
	"default-templates/secondary-parameters.tmpl": defaultTemplatesSecondaryParametersTmpl,
	"default-templates/standalone-cloudconfig.tmpl": defaultTemplatesStandaloneCloudconfigTmpl,
	"default-templates/standalone-cloudformation.tmpl": defaultTemplatesStandaloneCloudformationTmpl,
	"default-templates/standalone-parameters.tmpl": defaultTemplatesStandaloneParametersTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"default-templates": &bintree{nil, map[string]*bintree{
		"primary-cloudconfig.tmpl": &bintree{defaultTemplatesPrimaryCloudconfigTmpl, map[string]*bintree{}},
		"primary-cloudformation.tmpl": &bintree{defaultTemplatesPrimaryCloudformationTmpl, map[string]*bintree{}},
		"primary-parameters.tmpl": &bintree{defaultTemplatesPrimaryParametersTmpl, map[string]*bintree{}},
		"secondary-cloudconfig.tmpl": &bintree{defaultTemplatesSecondaryCloudconfigTmpl, map[string]*bintree{}},
		"secondary-cloudformation.tmpl": &bintree{defaultTemplatesSecondaryCloudformationTmpl, map[string]*bintree{}},
		"secondary-parameters.tmpl": &bintree{defaultTemplatesSecondaryParametersTmpl, map[string]*bintree{}},
		"standalone-cloudconfig.tmpl": &bintree{defaultTemplatesStandaloneCloudconfigTmpl, map[string]*bintree{}},
		"standalone-cloudformation.tmpl": &bintree{defaultTemplatesStandaloneCloudformationTmpl, map[string]*bintree{}},
		"standalone-parameters.tmpl": &bintree{defaultTemplatesStandaloneParametersTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

